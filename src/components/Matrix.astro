---
interface Props {
  cantidad?: number;
}

const { cantidad = 12 } = Astro.props;
---
<div class="text-white pl-0" >
  <div class="ai-matrix-loader flex gap-3" >
    {Array.from({ length: cantidad }).map(() => (
      <div class="digit">&nbsp</div>
    ))}
  </div>
</div>

<script>
  const contenedor = document.querySelector(".ai-matrix-loader");
  const cantidad = parseInt(contenedor.dataset.cantidad);
  const digitos = contenedor.querySelectorAll(".digit");

  function actualizarArray() {
    digitos.forEach(d => {
      d.textContent = Math.random() > 0.5 ? 1 : 0;
    });
  }

  setInterval(actualizarArray, 2000);
</script>



<style>
.ai-matrix-loader {
  margin: 30px auto;
  position: relative;
  perspective: 800px;
}

.digit {
  font-family: monospace;
  font-size: 18px;
  text-align: center;
  text-shadow: 0 0 5px #ffffff;
  animation:
    matrix-fall 2s infinite,
    matrix-flicker 0.5s infinite;
  opacity: 0;
}

.digit:nth-child(1) {
  animation-delay: 0.1s;
}
.digit:nth-child(2) {
  animation-delay: 0.3s;
}
.digit:nth-child(3) {
  animation-delay: 0.5s;
}
.digit:nth-child(4) {
  animation-delay: 0.7s;
}
.digit:nth-child(5) {
  animation-delay: 0.9s;
}
.digit:nth-child(6) {
  animation-delay: 1.1s;
}
.digit:nth-child(7) {
  animation-delay: 1.3s;
}
.digit:nth-child(8) {
  animation-delay: 1.5s;
}
.digit:nth-child(9) {
  animation-delay: 1.7s;
}
.digit:nth-child(10) {
  animation-delay: 1.9s;
}
.digit:nth-child(11) {
  animation-delay: 2.1s;
} 
.digit:nth-child(12) {
  animation-delay: 2.3s;
}



@keyframes matrix-fall {
  0% {
    transform: translateY(-50px) rotateX(90deg);
    opacity: 0;
  }
  20%,
  80% {
    transform: translateY(0) rotateX(0deg);
    opacity: 0.8;
  }
  100% {
    transform: translateY(50px) rotateX(-90deg);
    opacity: 0;
  }
}

@keyframes matrix-flicker {
  0%,
  19%,
  21%,
  100% {
    opacity: 0.8;
  }
  20% {
    opacity: 0.2;
  }
}

@keyframes matrix-pulse {
  0%,
  100% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.7;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.fade-in {
  opacity: 0;
  animation: fadeIn 2s ease-out forwards;
  animation-delay: 0.3s; /* Opcional: retardo */
}

</style>